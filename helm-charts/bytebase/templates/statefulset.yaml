{{- $external_url := index .Values "external-url" -}}
{{- $pg := .Values.pg -}}
{{- $port := .Values.service.port -}}
{{- $data := .Values.volume.data -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bytebase.fullname" . }}
  namespace: {{ template "bytebase.namespace" . }}
  labels:
    {{- include "bytebase.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "bytebase.selectorLabels" . | nindent 6 }}
  serviceName: "bytebase"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bytebase.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bytebase.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            [
              "--data",
              {{ $data | quote }},
              "--port",
              {{ $port | quote }},
              "--external-url",
              # helm parser cannot handle the dash in the value, so we need to quote it, so we use $external_url instead of $external-url.
              {{ $external_url | quote }},
              "--pg",
              "$DB_URL",
            ]
          env:
            {{- include "pg.env" . | indent 12 }}
          volumeMounts:
            - mountPath: {{ .Values.volume.data  }}
              name: bytebase
          ports:
            - containerPort: {{ .Values.service.port }}
              name: web
              protocol: TCP
          #env:
          #  - name: DATABASE_PASSWORD
          #    valueFrom:
          #      secretKeyRef:
          #        name: {{ .Values.database.existingSecret }}
          #        key: password
          readinessProbe:
            httpGet:
              path: /api/actuator/info
              port: web
            initialDelaySeconds: 2
            periodSeconds: 2
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.service.port }}
            initialDelaySeconds: 300
            periodSeconds: 300
            timeoutSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: bytebase
        emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "bytebase.fullname" . }}
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "{{ .Values.storage.size }}"